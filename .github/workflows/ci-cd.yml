name: LambdaTest Local Website CI/CD
on:
  push:
    branches:
      - main
  schedule:
    - cron: '*/5 * * * *' # Every 5 minutes

jobs:
  lambdatest-tests:
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      # 1. Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install Dependencies (Selenium)
      - name: Install Dependencies
        run: pip install selenium

      # 4. Start local server
      - name: Start Local Server
        shell: pwsh
        run: |
          Start-Process python -ArgumentList "-m", "http.server", "5500"
          echo "Local server started on port 5500."
          Start-Sleep -Seconds 5

      # 5. Start LambdaTest Tunnel (CRITICAL STEP)
      - name: Start LambdaTest Tunnel
        shell: pwsh
        run: |
          # FIX 1: Correct variables for Windows path and executable
          $TUNNEL_EXEC = "LT_Tunnel/LT.exe"
          $PID_FILE = "LT_Tunnel/lt_tunnel.pid"

          # 5a. Download and setup the tunnel executable (Windows-specific link)
          New-Item -ItemType Directory -Force -Path "LT_Tunnel"
          Invoke-WebRequest -Uri https://downloads.lambdatest.com/tunnel/v3/windows/64bit/LT_Windows.zip -OutFile LT_V4.zip
          Expand-Archive -Path LT_V4.zip -DestinationPath LT_Tunnel -Force
          
          # 5b. Start the tunnel in background with verbose logging
          # ðŸš¨ FIX 2: CREDENTIALS EMBEDDED DIRECTLY
          & $TUNNEL_EXEC `
            -user 'jyotiyadav' `  # <-- REPLACE THIS VALUE
            -key 'LT_QADsSrkYtrtgR0gOQKfoxZuVqQTm1DXlbHy0Vo9JkOzJwpe' `     
            -daemon `
            -verbose `
            -tunnel-name LambdaTunnel `
            -pid-file $PID_FILE 
          
          # 5c. Wait for the tunnel connection to confirm stability (PowerShell loop)
          echo "Waiting for tunnel connection (max 20s)..."
          for ($i=1; $i -le 20; $i++) {
            if (Test-Path $PID_FILE) {
              echo "LambdaTest Tunnel connected and ready (PID file found)."
              break
            }
            Start-Sleep -Seconds 1
            if ($i -eq 20) {
              echo "Error: LambdaTest Tunnel failed to connect within 20 seconds. CHECK LOGS FOR AUTHENTICATION FAILURE."
              exit 1 
            }
          }

      # 6. Run Selenium tests
      - name: Run Selenium Tests
        run: python tunnel.py

      # 7. Stop LambdaTest Tunnel
      - name: Stop LambdaTest Tunnel
        if: always() 
        shell: pwsh
        run: |
          try {
            taskkill /F /IM LT.exe
            echo "LambdaTest Tunnel cleanup completed."
          } catch {
            echo "LambdaTest Tunnel process not found. Continuing..."
          }