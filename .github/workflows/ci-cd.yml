name: LambdaTest Local Website CI/CD

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Optional manual trigger
  schedule:
    - cron: '*/5 * * * *'  # Optional: run every 5 minutes

jobs:
  lambdatest-tests:
    runs-on: windows-latest
    timeout-minutes: 30

    steps:
      # 1. Checkout repository
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 2. Setup Python
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Install dependencies
      - name: Install Dependencies
        run: pip install selenium pytest

      # 4. Start local server on port 5500
      - name: Start Local Server
        shell: pwsh
        run: |
          Write-Host "üöÄ Starting local server..."
          Start-Job -ScriptBlock { python -m http.server 5500 }
          Start-Sleep -Seconds 5
          Write-Host "‚úÖ Local server started at http://127.0.0.1:5500"

      # 5. Start LambdaTest Tunnel
      - name: Start LambdaTest Tunnel
        shell: pwsh
        run: |
          $TUNNEL_DIR = "LT_Tunnel"
          $TUNNEL_ZIP = "LT_Windows.zip"
          $TUNNEL_EXEC = "$TUNNEL_DIR/LT.exe"
          $PID_FILE = "$TUNNEL_DIR/lt_tunnel.pid"

          # Download and unzip tunnel binary
          New-Item -ItemType Directory -Force -Path $TUNNEL_DIR | Out-Null
          Invoke-WebRequest -Uri "https://downloads.lambdatest.com/tunnel/v3/windows/64bit/LT_Windows.zip" -OutFile $TUNNEL_ZIP
          Expand-Archive -Path $TUNNEL_ZIP -DestinationPath $TUNNEL_DIR -Force

          # Start tunnel in background
          $args = "--user ${{ secrets.jyotiyadav }} --key ${{ secrets.LT_QADsSrkYtrtgR0gOQKfoxZuVqQTm1DXlbHy0Vo9JkOzJwpe }} --daemon --verbose --tunnel-name 
          fd722dc5-4ba2-43b6-85e8-77ffd3f42d0c --pid-file $PID_FILE --force-local"
          Start-Process -FilePath $TUNNEL_EXEC -ArgumentList $args
          Write-Host "‚è≥ Starting LambdaTest Tunnel..."

          # Wait until tunnel PID file exists
          # $maxWait = 60
          for ($i = 1; $i -le $maxWait; $i++) {
            if (Test-Path $PID_FILE) {
              Write-Host "‚úÖ LambdaTest Tunnel is up and running."
              break
            }
            Start-Sleep -Seconds 1
            if ($i -eq $maxWait) {
              Write-Host "‚ùå Tunnel did not start within $maxWait seconds"
              exit 1
            }
          }

      # 6. Run Selenium tests
      - name: Run Selenium Tests
        run: python tunnel.py
        env:
          LT_USERNAME: ${{ secrets.jyotiyadav }}
          LT_ACCESS_KEY: ${{ secrets.fd722dc5-4ba2-43b6-85e8-77ffd3f42d0c }}

      # 7. Stop LambdaTest Tunnel safely
      - name: Stop LambdaTest Tunnel
        if: always()
        shell: pwsh
        run: |
          $process = Get-Process LT -ErrorAction SilentlyContinue
          if ($process) {
              Stop-Process -Name LT -Force
              Write-Host "üßπ LambdaTest Tunnel stopped successfully."
          } else {
              Write-Host "No LT.exe process found. Nothing to stop."
          }

      # 8. Stop Local Server
      - name: Stop Local Server
        if: always()
        shell: pwsh
        run: |
          Write-Host "üõë Stopping local server..."
          Get-Job | Stop-Job
          Write-Host "‚úÖ Local server stopped."
